// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ds_svc.proto

#ifndef PROTOBUF_ds_5fsvc_2eproto__INCLUDED
#define PROTOBUF_ds_5fsvc_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace diststore {
class CheckHealthReply;
class CheckHealthReplyDefaultTypeInternal;
extern CheckHealthReplyDefaultTypeInternal _CheckHealthReply_default_instance_;
class CheckHealthRequest;
class CheckHealthRequestDefaultTypeInternal;
extern CheckHealthRequestDefaultTypeInternal _CheckHealthRequest_default_instance_;
class GetFileReply;
class GetFileReplyDefaultTypeInternal;
extern GetFileReplyDefaultTypeInternal _GetFileReply_default_instance_;
class GetFileRequest;
class GetFileRequestDefaultTypeInternal;
extern GetFileRequestDefaultTypeInternal _GetFileRequest_default_instance_;
class HelpReply;
class HelpReplyDefaultTypeInternal;
extern HelpReplyDefaultTypeInternal _HelpReply_default_instance_;
class HelpRequest;
class HelpRequestDefaultTypeInternal;
extern HelpRequestDefaultTypeInternal _HelpRequest_default_instance_;
class PutFileReply;
class PutFileReplyDefaultTypeInternal;
extern PutFileReplyDefaultTypeInternal _PutFileReply_default_instance_;
class PutFileRequest;
class PutFileRequestDefaultTypeInternal;
extern PutFileRequestDefaultTypeInternal _PutFileRequest_default_instance_;
}  // namespace diststore

namespace diststore {

namespace protobuf_ds_5fsvc_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_ds_5fsvc_2eproto

// ===================================================================

class PutFileRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:diststore.PutFileRequest) */ {
 public:
  PutFileRequest();
  virtual ~PutFileRequest();

  PutFileRequest(const PutFileRequest& from);

  inline PutFileRequest& operator=(const PutFileRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PutFileRequest& default_instance();

  static inline const PutFileRequest* internal_default_instance() {
    return reinterpret_cast<const PutFileRequest*>(
               &_PutFileRequest_default_instance_);
  }

  void Swap(PutFileRequest* other);

  // implements Message ----------------------------------------------

  inline PutFileRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  PutFileRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PutFileRequest& from);
  void MergeFrom(const PutFileRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PutFileRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string contents = 2;
  void clear_contents();
  static const int kContentsFieldNumber = 2;
  const ::std::string& contents() const;
  void set_contents(const ::std::string& value);
  #if LANG_CXX11
  void set_contents(::std::string&& value);
  #endif
  void set_contents(const char* value);
  void set_contents(const char* value, size_t size);
  ::std::string* mutable_contents();
  ::std::string* release_contents();
  void set_allocated_contents(::std::string* contents);

  // @@protoc_insertion_point(class_scope:diststore.PutFileRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr contents_;
  mutable int _cached_size_;
  friend struct  protobuf_ds_5fsvc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PutFileReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:diststore.PutFileReply) */ {
 public:
  PutFileReply();
  virtual ~PutFileReply();

  PutFileReply(const PutFileReply& from);

  inline PutFileReply& operator=(const PutFileReply& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PutFileReply& default_instance();

  static inline const PutFileReply* internal_default_instance() {
    return reinterpret_cast<const PutFileReply*>(
               &_PutFileReply_default_instance_);
  }

  void Swap(PutFileReply* other);

  // implements Message ----------------------------------------------

  inline PutFileReply* New() const PROTOBUF_FINAL { return New(NULL); }

  PutFileReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PutFileReply& from);
  void MergeFrom(const PutFileReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PutFileReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string message = 1;
  void clear_message();
  static const int kMessageFieldNumber = 1;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:diststore.PutFileReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  mutable int _cached_size_;
  friend struct  protobuf_ds_5fsvc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetFileRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:diststore.GetFileRequest) */ {
 public:
  GetFileRequest();
  virtual ~GetFileRequest();

  GetFileRequest(const GetFileRequest& from);

  inline GetFileRequest& operator=(const GetFileRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetFileRequest& default_instance();

  static inline const GetFileRequest* internal_default_instance() {
    return reinterpret_cast<const GetFileRequest*>(
               &_GetFileRequest_default_instance_);
  }

  void Swap(GetFileRequest* other);

  // implements Message ----------------------------------------------

  inline GetFileRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetFileRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetFileRequest& from);
  void MergeFrom(const GetFileRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetFileRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:diststore.GetFileRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct  protobuf_ds_5fsvc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetFileReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:diststore.GetFileReply) */ {
 public:
  GetFileReply();
  virtual ~GetFileReply();

  GetFileReply(const GetFileReply& from);

  inline GetFileReply& operator=(const GetFileReply& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetFileReply& default_instance();

  static inline const GetFileReply* internal_default_instance() {
    return reinterpret_cast<const GetFileReply*>(
               &_GetFileReply_default_instance_);
  }

  void Swap(GetFileReply* other);

  // implements Message ----------------------------------------------

  inline GetFileReply* New() const PROTOBUF_FINAL { return New(NULL); }

  GetFileReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetFileReply& from);
  void MergeFrom(const GetFileReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetFileReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string message = 1;
  void clear_message();
  static const int kMessageFieldNumber = 1;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // string contents = 2;
  void clear_contents();
  static const int kContentsFieldNumber = 2;
  const ::std::string& contents() const;
  void set_contents(const ::std::string& value);
  #if LANG_CXX11
  void set_contents(::std::string&& value);
  #endif
  void set_contents(const char* value);
  void set_contents(const char* value, size_t size);
  ::std::string* mutable_contents();
  ::std::string* release_contents();
  void set_allocated_contents(::std::string* contents);

  // @@protoc_insertion_point(class_scope:diststore.GetFileReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::internal::ArenaStringPtr contents_;
  mutable int _cached_size_;
  friend struct  protobuf_ds_5fsvc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CheckHealthRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:diststore.CheckHealthRequest) */ {
 public:
  CheckHealthRequest();
  virtual ~CheckHealthRequest();

  CheckHealthRequest(const CheckHealthRequest& from);

  inline CheckHealthRequest& operator=(const CheckHealthRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckHealthRequest& default_instance();

  static inline const CheckHealthRequest* internal_default_instance() {
    return reinterpret_cast<const CheckHealthRequest*>(
               &_CheckHealthRequest_default_instance_);
  }

  void Swap(CheckHealthRequest* other);

  // implements Message ----------------------------------------------

  inline CheckHealthRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CheckHealthRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CheckHealthRequest& from);
  void MergeFrom(const CheckHealthRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CheckHealthRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:diststore.CheckHealthRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct  protobuf_ds_5fsvc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CheckHealthReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:diststore.CheckHealthReply) */ {
 public:
  CheckHealthReply();
  virtual ~CheckHealthReply();

  CheckHealthReply(const CheckHealthReply& from);

  inline CheckHealthReply& operator=(const CheckHealthReply& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckHealthReply& default_instance();

  static inline const CheckHealthReply* internal_default_instance() {
    return reinterpret_cast<const CheckHealthReply*>(
               &_CheckHealthReply_default_instance_);
  }

  void Swap(CheckHealthReply* other);

  // implements Message ----------------------------------------------

  inline CheckHealthReply* New() const PROTOBUF_FINAL { return New(NULL); }

  CheckHealthReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CheckHealthReply& from);
  void MergeFrom(const CheckHealthReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CheckHealthReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string message = 1;
  void clear_message();
  static const int kMessageFieldNumber = 1;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // int32 lastlogindex = 2;
  void clear_lastlogindex();
  static const int kLastlogindexFieldNumber = 2;
  ::google::protobuf::int32 lastlogindex() const;
  void set_lastlogindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:diststore.CheckHealthReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::int32 lastlogindex_;
  mutable int _cached_size_;
  friend struct  protobuf_ds_5fsvc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HelpRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:diststore.HelpRequest) */ {
 public:
  HelpRequest();
  virtual ~HelpRequest();

  HelpRequest(const HelpRequest& from);

  inline HelpRequest& operator=(const HelpRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HelpRequest& default_instance();

  static inline const HelpRequest* internal_default_instance() {
    return reinterpret_cast<const HelpRequest*>(
               &_HelpRequest_default_instance_);
  }

  void Swap(HelpRequest* other);

  // implements Message ----------------------------------------------

  inline HelpRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  HelpRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HelpRequest& from);
  void MergeFrom(const HelpRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HelpRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 lastlogindex = 1;
  void clear_lastlogindex();
  static const int kLastlogindexFieldNumber = 1;
  ::google::protobuf::int32 lastlogindex() const;
  void set_lastlogindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:diststore.HelpRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 lastlogindex_;
  mutable int _cached_size_;
  friend struct  protobuf_ds_5fsvc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HelpReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:diststore.HelpReply) */ {
 public:
  HelpReply();
  virtual ~HelpReply();

  HelpReply(const HelpReply& from);

  inline HelpReply& operator=(const HelpReply& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HelpReply& default_instance();

  static inline const HelpReply* internal_default_instance() {
    return reinterpret_cast<const HelpReply*>(
               &_HelpReply_default_instance_);
  }

  void Swap(HelpReply* other);

  // implements Message ----------------------------------------------

  inline HelpReply* New() const PROTOBUF_FINAL { return New(NULL); }

  HelpReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HelpReply& from);
  void MergeFrom(const HelpReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HelpReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string loginfo = 1;
  void clear_loginfo();
  static const int kLoginfoFieldNumber = 1;
  const ::std::string& loginfo() const;
  void set_loginfo(const ::std::string& value);
  #if LANG_CXX11
  void set_loginfo(::std::string&& value);
  #endif
  void set_loginfo(const char* value);
  void set_loginfo(const char* value, size_t size);
  ::std::string* mutable_loginfo();
  ::std::string* release_loginfo();
  void set_allocated_loginfo(::std::string* loginfo);

  // @@protoc_insertion_point(class_scope:diststore.HelpReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr loginfo_;
  mutable int _cached_size_;
  friend struct  protobuf_ds_5fsvc_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// PutFileRequest

// string name = 1;
inline void PutFileRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PutFileRequest::name() const {
  // @@protoc_insertion_point(field_get:diststore.PutFileRequest.name)
  return name_.GetNoArena();
}
inline void PutFileRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:diststore.PutFileRequest.name)
}
#if LANG_CXX11
inline void PutFileRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:diststore.PutFileRequest.name)
}
#endif
inline void PutFileRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:diststore.PutFileRequest.name)
}
inline void PutFileRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:diststore.PutFileRequest.name)
}
inline ::std::string* PutFileRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:diststore.PutFileRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PutFileRequest::release_name() {
  // @@protoc_insertion_point(field_release:diststore.PutFileRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PutFileRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:diststore.PutFileRequest.name)
}

// string contents = 2;
inline void PutFileRequest::clear_contents() {
  contents_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PutFileRequest::contents() const {
  // @@protoc_insertion_point(field_get:diststore.PutFileRequest.contents)
  return contents_.GetNoArena();
}
inline void PutFileRequest::set_contents(const ::std::string& value) {
  
  contents_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:diststore.PutFileRequest.contents)
}
#if LANG_CXX11
inline void PutFileRequest::set_contents(::std::string&& value) {
  
  contents_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:diststore.PutFileRequest.contents)
}
#endif
inline void PutFileRequest::set_contents(const char* value) {
  
  contents_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:diststore.PutFileRequest.contents)
}
inline void PutFileRequest::set_contents(const char* value, size_t size) {
  
  contents_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:diststore.PutFileRequest.contents)
}
inline ::std::string* PutFileRequest::mutable_contents() {
  
  // @@protoc_insertion_point(field_mutable:diststore.PutFileRequest.contents)
  return contents_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PutFileRequest::release_contents() {
  // @@protoc_insertion_point(field_release:diststore.PutFileRequest.contents)
  
  return contents_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PutFileRequest::set_allocated_contents(::std::string* contents) {
  if (contents != NULL) {
    
  } else {
    
  }
  contents_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contents);
  // @@protoc_insertion_point(field_set_allocated:diststore.PutFileRequest.contents)
}

// -------------------------------------------------------------------

// PutFileReply

// string message = 1;
inline void PutFileReply::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PutFileReply::message() const {
  // @@protoc_insertion_point(field_get:diststore.PutFileReply.message)
  return message_.GetNoArena();
}
inline void PutFileReply::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:diststore.PutFileReply.message)
}
#if LANG_CXX11
inline void PutFileReply::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:diststore.PutFileReply.message)
}
#endif
inline void PutFileReply::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:diststore.PutFileReply.message)
}
inline void PutFileReply::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:diststore.PutFileReply.message)
}
inline ::std::string* PutFileReply::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:diststore.PutFileReply.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PutFileReply::release_message() {
  // @@protoc_insertion_point(field_release:diststore.PutFileReply.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PutFileReply::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:diststore.PutFileReply.message)
}

// -------------------------------------------------------------------

// GetFileRequest

// string name = 1;
inline void GetFileRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetFileRequest::name() const {
  // @@protoc_insertion_point(field_get:diststore.GetFileRequest.name)
  return name_.GetNoArena();
}
inline void GetFileRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:diststore.GetFileRequest.name)
}
#if LANG_CXX11
inline void GetFileRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:diststore.GetFileRequest.name)
}
#endif
inline void GetFileRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:diststore.GetFileRequest.name)
}
inline void GetFileRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:diststore.GetFileRequest.name)
}
inline ::std::string* GetFileRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:diststore.GetFileRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetFileRequest::release_name() {
  // @@protoc_insertion_point(field_release:diststore.GetFileRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetFileRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:diststore.GetFileRequest.name)
}

// -------------------------------------------------------------------

// GetFileReply

// string message = 1;
inline void GetFileReply::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetFileReply::message() const {
  // @@protoc_insertion_point(field_get:diststore.GetFileReply.message)
  return message_.GetNoArena();
}
inline void GetFileReply::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:diststore.GetFileReply.message)
}
#if LANG_CXX11
inline void GetFileReply::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:diststore.GetFileReply.message)
}
#endif
inline void GetFileReply::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:diststore.GetFileReply.message)
}
inline void GetFileReply::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:diststore.GetFileReply.message)
}
inline ::std::string* GetFileReply::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:diststore.GetFileReply.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetFileReply::release_message() {
  // @@protoc_insertion_point(field_release:diststore.GetFileReply.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetFileReply::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:diststore.GetFileReply.message)
}

// string contents = 2;
inline void GetFileReply::clear_contents() {
  contents_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetFileReply::contents() const {
  // @@protoc_insertion_point(field_get:diststore.GetFileReply.contents)
  return contents_.GetNoArena();
}
inline void GetFileReply::set_contents(const ::std::string& value) {
  
  contents_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:diststore.GetFileReply.contents)
}
#if LANG_CXX11
inline void GetFileReply::set_contents(::std::string&& value) {
  
  contents_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:diststore.GetFileReply.contents)
}
#endif
inline void GetFileReply::set_contents(const char* value) {
  
  contents_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:diststore.GetFileReply.contents)
}
inline void GetFileReply::set_contents(const char* value, size_t size) {
  
  contents_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:diststore.GetFileReply.contents)
}
inline ::std::string* GetFileReply::mutable_contents() {
  
  // @@protoc_insertion_point(field_mutable:diststore.GetFileReply.contents)
  return contents_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetFileReply::release_contents() {
  // @@protoc_insertion_point(field_release:diststore.GetFileReply.contents)
  
  return contents_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetFileReply::set_allocated_contents(::std::string* contents) {
  if (contents != NULL) {
    
  } else {
    
  }
  contents_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contents);
  // @@protoc_insertion_point(field_set_allocated:diststore.GetFileReply.contents)
}

// -------------------------------------------------------------------

// CheckHealthRequest

// -------------------------------------------------------------------

// CheckHealthReply

// string message = 1;
inline void CheckHealthReply::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CheckHealthReply::message() const {
  // @@protoc_insertion_point(field_get:diststore.CheckHealthReply.message)
  return message_.GetNoArena();
}
inline void CheckHealthReply::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:diststore.CheckHealthReply.message)
}
#if LANG_CXX11
inline void CheckHealthReply::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:diststore.CheckHealthReply.message)
}
#endif
inline void CheckHealthReply::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:diststore.CheckHealthReply.message)
}
inline void CheckHealthReply::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:diststore.CheckHealthReply.message)
}
inline ::std::string* CheckHealthReply::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:diststore.CheckHealthReply.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CheckHealthReply::release_message() {
  // @@protoc_insertion_point(field_release:diststore.CheckHealthReply.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckHealthReply::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:diststore.CheckHealthReply.message)
}

// int32 lastlogindex = 2;
inline void CheckHealthReply::clear_lastlogindex() {
  lastlogindex_ = 0;
}
inline ::google::protobuf::int32 CheckHealthReply::lastlogindex() const {
  // @@protoc_insertion_point(field_get:diststore.CheckHealthReply.lastlogindex)
  return lastlogindex_;
}
inline void CheckHealthReply::set_lastlogindex(::google::protobuf::int32 value) {
  
  lastlogindex_ = value;
  // @@protoc_insertion_point(field_set:diststore.CheckHealthReply.lastlogindex)
}

// -------------------------------------------------------------------

// HelpRequest

// int32 lastlogindex = 1;
inline void HelpRequest::clear_lastlogindex() {
  lastlogindex_ = 0;
}
inline ::google::protobuf::int32 HelpRequest::lastlogindex() const {
  // @@protoc_insertion_point(field_get:diststore.HelpRequest.lastlogindex)
  return lastlogindex_;
}
inline void HelpRequest::set_lastlogindex(::google::protobuf::int32 value) {
  
  lastlogindex_ = value;
  // @@protoc_insertion_point(field_set:diststore.HelpRequest.lastlogindex)
}

// -------------------------------------------------------------------

// HelpReply

// string loginfo = 1;
inline void HelpReply::clear_loginfo() {
  loginfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HelpReply::loginfo() const {
  // @@protoc_insertion_point(field_get:diststore.HelpReply.loginfo)
  return loginfo_.GetNoArena();
}
inline void HelpReply::set_loginfo(const ::std::string& value) {
  
  loginfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:diststore.HelpReply.loginfo)
}
#if LANG_CXX11
inline void HelpReply::set_loginfo(::std::string&& value) {
  
  loginfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:diststore.HelpReply.loginfo)
}
#endif
inline void HelpReply::set_loginfo(const char* value) {
  
  loginfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:diststore.HelpReply.loginfo)
}
inline void HelpReply::set_loginfo(const char* value, size_t size) {
  
  loginfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:diststore.HelpReply.loginfo)
}
inline ::std::string* HelpReply::mutable_loginfo() {
  
  // @@protoc_insertion_point(field_mutable:diststore.HelpReply.loginfo)
  return loginfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HelpReply::release_loginfo() {
  // @@protoc_insertion_point(field_release:diststore.HelpReply.loginfo)
  
  return loginfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HelpReply::set_allocated_loginfo(::std::string* loginfo) {
  if (loginfo != NULL) {
    
  } else {
    
  }
  loginfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), loginfo);
  // @@protoc_insertion_point(field_set_allocated:diststore.HelpReply.loginfo)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace diststore

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ds_5fsvc_2eproto__INCLUDED
